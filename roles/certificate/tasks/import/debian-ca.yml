---
- name: Creating variables
  set_fact:
    host: "{{ host_config.host }}"
    folder: "/usr/local/share/ca-certificates/"

    ssl_certificate_path: "{{ certificate_path }}/{{ temp_certificate_name }}.{{ certificate_extention }}"
    ssl_certificate_name: "{{ temp_certificate_name }}.{{ certificate_extention }}"
  vars:
    temp_certificate_name: "{{ certificate_path | basename }}"

- name: Verifying if "{{ ssl_certificate_path }}" file exists
  stat:
    path: "{{ ssl_certificate_path }}"
  register: new_certificate_file_exists

- name: Getting info about the certificate
  community.crypto.x509_certificate_info:
    path: "{{ ssl_certificate_path }}"
  register: new_certificate_info
  when: new_certificate_file_exists.stat.exists | bool

- name: Creating the should_import_certificate variable
  set_fact:
    should_import_certificate: "{{ (new_certificate_file_exists.stat.exists | bool and not new_certificate_info.expired) }}"

- name: Printing variables
  debug:
    msg:
      - "should_import_certificate  : {{ should_import_certificate }}"
      - "host                       : {{ host }}"
      - "folder                     : {{ folder }}"

      - "ssl_certificate_path       : {{ ssl_certificate_path }}"
      - "ssl_certificate_name       : {{ ssl_certificate_name }}"
  when: debug | bool

- block:
    - name: Copying certificate to {{ host }}
      delegate_to: "{{ host }}"
      copy:
        src: "{{ ssl_certificate_path }}"
        dest: "{{ folder }}/{{ ssl_certificate_name }}"
        mode: "644"
      register: "certificate_copy"
      when: should_import_certificate | bool

    - name: Importing the certificate into {{ host }}
      delegate_to: "{{ host }}"
      command: "update-ca-certificates"
      register: "output"
      when: certificate_copy.changed | bool

    - name: Printing output of the import certificate
      debug:
        msg:
          - "output  : {{ output.stdout_lines }}"
      when: debug | bool and certificate_copy.changed | bool

  ignore_unreachable: yes
  ignore_errors: yes
